#!/bin/bash

# Script de verificaci√≥n de assets cr√≠ticos - INDARCA
# Verifica que todos los assets cr√≠ticos est√©n en su lugar correcto

echo "üîç VERIFICACI√ìN DE ASSETS CR√çTICOS - INDARCA"
echo "=============================================="
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Contador de errores
ERRORS=0

echo -e "${BLUE}üìπ VERIFICANDO VIDEO DEL HERO...${NC}"
echo "--------------------------------------"

# Video del hero principal
if [ -f "public/assets/img/OTROS/videoHeroindarca.mov" ]; then
    SIZE=$(du -h "public/assets/img/OTROS/videoHeroindarca.mov" | cut -f1)
    echo -e "‚úÖ ${GREEN}Video principal encontrado: ${SIZE}${NC}"
else
    echo -e "‚ùå ${RED}ERROR: Video principal no encontrado en public/assets/img/OTROS/videoHeroindarca.mov${NC}"
    ERRORS=$((ERRORS + 1))
fi

# Video MP4 de respaldo
if [ -f "public/assets/img/OTROS/videoHeroindarca.mp4" ]; then
    SIZE=$(du -h "public/assets/img/OTROS/videoHeroindarca.mp4" | cut -f1)
    echo -e "‚úÖ ${GREEN}Video MP4 encontrado: ${SIZE}${NC}"
else
    echo -e "‚ö†Ô∏è  ${YELLOW}ADVERTENCIA: Video MP4 no encontrado. Se crear√° autom√°ticamente.${NC}"
fi

echo ""
echo -e "${BLUE}üî¨ VERIFICANDO IM√ÅGENES DE DENS√çMETROS...${NC}"
echo "----------------------------------------------"

# Imagen del dens√≠metro nuclear
if [ -f "public/assets/img/DENSIMETROS/TROXLER/DENSIMETROS_TROXLERR_10.png" ]; then
    SIZE=$(du -h "public/assets/img/DENSIMETROS/TROXLER/DENSIMETROS_TROXLERR_10.png" | cut -f1)
    echo -e "‚úÖ ${GREEN}Imagen dens√≠metro nuclear encontrada: ${SIZE}${NC}"
else
    echo -e "‚ùå ${RED}ERROR: Imagen dens√≠metro nuclear no encontrada en public/assets/img/DENSIMETROS/TROXLER/DENSIMETROS_TROXLERR_10.png${NC}"
    ERRORS=$((ERRORS + 1))
fi

echo ""
echo -e "${BLUE}üîó VERIFICANDO ENLACES SIMB√ìLICOS...${NC}"
echo "--------------------------------------"

# Storage link
if [ -L "public/storage" ]; then
    echo -e "‚úÖ ${GREEN}Enlace simb√≥lico de storage existe${NC}"
else
    echo -e "‚ö†Ô∏è  ${YELLOW}ADVERTENCIA: Enlace simb√≥lico de storage no existe. Ejecuta: php artisan storage:link${NC}"
fi

echo ""
echo -e "${BLUE}üìÇ VERIFICANDO PERMISOS...${NC}"
echo "----------------------------"

# Verificar permisos de directorios cr√≠ticos
if [ -d "public/assets" ]; then
    PERMS=$(stat -c "%a" "public/assets" 2>/dev/null || stat -f "%A" "public/assets" 2>/dev/null)
    if [ "$PERMS" = "755" ] || [ "$PERMS" = "0755" ]; then
        echo -e "‚úÖ ${GREEN}Permisos de public/assets correctos: ${PERMS}${NC}"
    else
        echo -e "‚ö†Ô∏è  ${YELLOW}ADVERTENCIA: Permisos de public/assets: ${PERMS} (recomendado: 755)${NC}"
    fi
fi

if [ -d "storage" ]; then
    PERMS=$(stat -c "%a" "storage" 2>/dev/null || stat -f "%A" "storage" 2>/dev/null)
    if [ "$PERMS" = "775" ] || [ "$PERMS" = "0775" ]; then
        echo -e "‚úÖ ${GREEN}Permisos de storage correctos: ${PERMS}${NC}"
    else
        echo -e "‚ö†Ô∏è  ${YELLOW}ADVERTENCIA: Permisos de storage: ${PERMS} (recomendado: 775)${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üìã RESUMEN DE VERIFICACI√ìN${NC}"
echo "============================"

if [ $ERRORS -eq 0 ]; then
    echo -e "üéâ ${GREEN}¬°TODOS LOS ASSETS CR√çTICOS EST√ÅN EN SU LUGAR!${NC}"
    echo -e "   ${GREEN}Tu aplicaci√≥n deber√≠a funcionar correctamente en producci√≥n.${NC}"
else
    echo -e "‚ö†Ô∏è  ${RED}SE ENCONTRARON ${ERRORS} ERRORES CR√çTICOS${NC}"
    echo -e "   ${RED}Revisa los archivos faltantes antes de desplegar en producci√≥n.${NC}"
fi

echo ""
echo -e "${BLUE}üí° COMANDOS √öTILES:${NC}"
echo "-------------------"
echo "‚Ä¢ Ejecutar script de despliegue: ./deploy-assets.sh"
echo "‚Ä¢ Crear enlace de storage: php artisan storage:link"
echo "‚Ä¢ Limpiar cache: php artisan config:clear && php artisan cache:clear && php artisan view:clear"
echo "‚Ä¢ Verificar permisos: chmod -R 755 public/assets && chmod -R 775 storage"

exit $ERRORS
